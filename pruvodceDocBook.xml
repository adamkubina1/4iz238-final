<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="cs">
    <info>
        <title>Dokumentace pro semestrální práci Průvodce památkami</title>
        <author>
            <personname><firstname>Klára</firstname><surname>Ťoupalíková</surname></personname>
            <address><city>Praha</city>            </address>
            <email>touk01@vse.cz</email>
        </author>
    </info>
    <preface>
        <title>Úvod</title>
        <para>Tato dokumentace popisuje semestrální práci z oblasti památek ČR. V<link linkend="xml"> kapitole 1</link> je popsána struktura XML dokumentu a jednotlivé komponenty. V
            druhé kapitole se zaměřím na použitá schémata a ve třetí na XSLT transformace do pdf a
            html. </para>
    </preface>
    <chapter xml:id="xml">
        <title>XML</title>
        <para>V této části práce je popsána struktura XML dokumentace pro průvodce památek.</para>
        <sect1>
            <title>XML dokument</title>
            <para>XML dokument obashuje kořenový element průvodce. V kořenovém elementu <indexterm>
                    <primary>kořenový element</primary>
                </indexterm><emphasis role="bold">průvodce</emphasis> musí být elementy názevDíla,
                autor a památky.  <emphasis role="bold">Památky</emphasis> mohou mít v sobě
                nekonečně mnoho elementů <emphasis role="bold">památka</emphasis>, které tvoří
                samotné tělo projektu.</para>
        </sect1>
        <sect1>
            <title>Struktura složitějších elementů </title>
            <para>Složitějšími elementy je myšlen element mající v sobě dva a více různých
                podelementů.</para>
            <variablelist>
                <varlistentry>
                    <term>průvodce</term>
                    <listitem>
                        <para>kořenový element, zastřešuje veškerý obsah dokumentu</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>památka</term>
                    <listitem>
                        <para>zastřešuje jednotlivé údaje o památce</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>umístění</term>
                    <listitem>
                        <para>obsahuje elementy <emphasis role="bold">kraj</emphasis> a <emphasis role="bold">mapa</emphasis></para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>hodnocení</term>
                    <listitem>
                        <para>je podelementem <emphasis role="bold">reference</emphasis> a obsahuje informace týkající se počtu hvězd,
                        datumu uvedení recenze a samotnou recenzi v podobě komentáře</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect1>
    </chapter>
    <chapter xml:id="xml_schema">
        <title xreflabel="Kapitola XML Schéma">Schémata</title>
        <para>XML schéma nám umožňuje definovat strukturu dokumentu pro průvodce. V této práci jsem
            použila schémata dvojího typu. Za základní schéma považuji XML Schema, ve kterém je
            definována většina pravidel. Za doplňkové schéma považuji kód psaný v
            Schematronu.</para>
        <sect1>
            <title>W3C XML Schema</title>
            <para>Níže můžeme vidět ukázku kódu z W3C XML Schema, kde omezujeme element <emphasis
                    role="bold">Oblíbenost</emphasis>.Pro element byl vytvořen vlastní typ (viz
                první část kódu), který je dále omezován v druhé části kódu na desetinné číslo s
                minimální a maximální možnou hodnotou. </para>
            <programlisting>&lt;xs:complexType name="PamátkaTyp">
        &lt;xs:sequence>
            &lt;xs:element name="název" type="NázevTyp"/>
            &lt;xs:element name="postaven" type="PostavenTyp"/>
            &lt;xs:element name="oblíbenost" type="OblíbenostTyp"/>
            &lt;xs:element name="památkaPoblíž" type="AutorTyp"/>
            &lt;xs:element name="umístění" type="UmístěníTyp"/>
            &lt;xs:element name="sloh" type="AutorTyp"/>
            &lt;xs:element name="foto" type="FotoTyp"/>
            &lt;xs:element name="popis" type="PopisTyp"/>
            &lt;xs:element name="zajímavost" type="ZajímavostTyp"/>
            &lt;xs:element name="majitelé" type="MajiteléTyp"/>
            &lt;xs:element name="navštívitelný" type="NavštívitelnýTyp"/>
            &lt;xs:element name="vstupné" type="VstupnéTyp"/>
            &lt;xs:element name="přístupnost" type="PřístupnostTyp"/>
            &lt;xs:element name="služby" type="SlužbyTyp"/>
            &lt;xs:element name="reference" type="ReferenceTyp"/>
            &lt;xs:element name="webovky" type="WebTyp"/>
        &lt;/xs:sequence>
        &lt;xs:attribute name="druh" type="DruhTyp" use="required"/>
    &lt;/xs:complexType></programlisting>
            <programlisting>&lt;xs:simpleType name="OblíbenostTyp">
        &lt;xs:restriction base="xs:decimal">
            &lt;xs:minInclusive value="0.0"/>
            &lt;xs:maxInclusive value="5.0"/>
        &lt;/xs:restriction>
    &lt;/xs:simpleType></programlisting>
        </sect1>
        <sect1>
            <title>Schematron</title>
            <para>Ukázka použitého schematronu - následující kód se stará o kontrolu, roku, kdy byla
                památka postavena.</para>
            <programlisting>&lt;sch:pattern>
        &lt;sch:title>Rok je zadán v pořádku&lt;/sch:title>
        &lt;sch:rule context="o:postaven">
            &lt;sch:assert test="max(../o:postaven) &amp;lt; 2019">
                Památka musí být postavená dříve než v roce 2019.
            &lt;/sch:assert>
        &lt;/sch:rule>
    &lt;/sch:pattern></programlisting>
        </sect1>
    </chapter>
    <chapter>
        <title>XSLT transformace</title>
        <para><indexterm>
                <primary>Transformace XML</primary>
            </indexterm> Transformace XML dokumentu prochází jako na obrázku.</para>
        <mediaobject>
            <imageobject>
                <imagedata align="center" fileref="obrazky/schema.png" format="png" width="800px"/>
            </imageobject>            
        </mediaobject>
        <sect1>
            <title>Použité XSLT transformace</title>
            <para>V zadání projektu bylo vytvořit XSLT transformace dvojího typu: <orderedlist>
                    <listitem>
                        <para>transformace do HTML</para>
                    </listitem>
                    <listitem>
                        <para>transformace do PDF</para>
                    </listitem>
                </orderedlist></para>
            <bridgehead>Příklad odlišnosti 1</bridgehead>
            <para>Přestože jde o stejný princip, používáme odlišné elementy k dosažení
                stejného/podobného výsledku. V obou případech generujeme obsah a další stránky s
                informacemi o jednotlivých památkách. (viz kód níže)</para>
            <programlisting>&lt;xsl:template match="památky">
        &lt;div id="kategorie">
            &lt;h4>Co hledáte?&lt;/h4>
            &lt;div class="flex-container">
                &lt;table>
                    &lt;tr>
                        &lt;th>HRADY&lt;/th>&lt;/tr>
                    &lt;xsl:for-each select="památka[@druh='hrad']">
                        &lt;xsl:sort select="název" lang="cs"/>
                        &lt;tr>
                            &lt;td>
                              <emphasis role="bold">  &lt;a href="{generate-id(.)}.html"></emphasis>
                                    &lt;xsl:value-of select="název"/>
                                &lt;/a>
                            &lt;/td>
                        &lt;/tr>
                    &lt;/xsl:for-each>
                &lt;/table>
   ...</programlisting>
            <para><emphasis>generování odkazu v HTML</emphasis></para>
            <programlisting>&lt;fo:block margin="3mm" padding="3mm" >
                            &lt;xsl:for-each select="průvodce/památky/památka[@druh='hrad']">
                                &lt;xsl:sort select="název" data-type="text" order="ascending"/>
                                &lt;fo:block text-align-last="justify">
                                    &lt;fo:basic-link internal-destination="{generate-id(.)}">
                                        &lt;xsl:value-of select="název"/>
                                        &lt;fo:leader leader-pattern="dots"/>
                                        &lt;fo:page-number-citation ref-id="{generate-id(.)}"/>
                                    &lt;/fo:basic-link>
                                &lt;/fo:block>  
                            &lt;/xsl:for-each>
                        &lt;/fo:block>
   ...</programlisting>
            <para><emphasis>generování odkazu v FO- pro PDF</emphasis></para>
            <bridgehead>Příklad odlišnosti 2</bridgehead>
            <para>Následující příklad ukazuje, jakým způsobem je transformace do HTML jednodušší a
                úspornější. V transformaci do PDF musíme vepisovat dodatečná metadata, která u HTML
                nejsou zapotřebí.</para>
            <programlisting> &lt;xsl:template match="počet_hvězd">
        &lt;xsl:text>POČET HVĚZD: &lt;/xsl:text>
        &lt;xsl:if test="text()='5'">
            &lt;xsl:text>&amp;#9733; &amp;#9733; &amp;#9733; &amp;#9733; &amp;#9733;&lt;/xsl:text>            
        &lt;/xsl:if>
        &lt;xsl:if test="text()='4'">
            &lt;xsl:text>&amp;#9733; &amp;#9733; &amp;#9733; &amp;#9733;&lt;/xsl:text>            
        &lt;/xsl:if>
        &lt;xsl:if test="text()='3'">
            &lt;xsl:text>&amp;#9733; &amp;#9733; &amp;#9733;&lt;/xsl:text>            
        &lt;/xsl:if>
        &lt;xsl:if test="text()='2'">
            &lt;xsl:text>&amp;#9733; &amp;#9733;&lt;/xsl:text>            
        &lt;/xsl:if>
        &lt;xsl:if test="text()='1'">
            &lt;xsl:text>&amp;#9733;&lt;/xsl:text>            
        &lt;/xsl:if>
    &lt;/xsl:template></programlisting>
            <para><emphasis>zápis znaku hvězdy v HTML</emphasis></para>
            <programlisting>&lt;xsl:template match="počet_hvězd">
        &lt;fo:block margin="2mm">
            &lt;xsl:if test="text()='5'">
                &lt;fo:inline font="14pt ZapfDingbats">&amp;#x2605; &amp;#9733; &amp;#9733; &amp;#9733; &amp;#9733;&lt;/fo:inline>            
            &lt;/xsl:if>
            &lt;xsl:if test="text()='4'">
                &lt;fo:inline font="14pt ZapfDingbats">&amp;#x2605; &amp;#9733; &amp;#9733; &amp;#9733;&lt;/fo:inline>            
            &lt;/xsl:if>
            &lt;xsl:if test="text()='3'">
                &lt;fo:inline font="14pt ZapfDingbats">&amp;#x2605; &amp;#9733; &amp;#9733;&lt;/fo:inline>            
            &lt;/xsl:if>
            &lt;xsl:if test="text()='2'">
                &lt;fo:inline font="14pt ZapfDingbats">&amp;#x2605; &amp;#9733;&lt;/fo:inline>            
            &lt;/xsl:if>
            &lt;xsl:if test="text()='1'">
                &lt;fo:inline font="14pt ZapfDingbats">&amp;#x2605;&lt;/fo:inline>            
            &lt;/xsl:if>
        &lt;/fo:block>
    &lt;/xsl:template></programlisting>
            <para><emphasis>zápis znaku hvězdy v FO - PDF</emphasis></para>
        </sect1>
    </chapter>
    <index/>
</book>
